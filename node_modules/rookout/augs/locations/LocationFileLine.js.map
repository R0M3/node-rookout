{"version":3,"sources":["../../../../src/augs/locations/LocationFileLine.js"],"names":["child_process","require","CryptoJS","SHA256","LocationFileLine","constructor","configuration","factory","filename","String","RookAugInvalidKey","lineno","Number","isInteger","fileHash","sha256","lineCrc32","line_crc32_2","lineUnique","line_unique","includeExternals","addAug","triggerServices","aug","self","debuggerService","getService","registered","registerNotification","augId","matchInfo","script","undefined","updatedLineno","fileContents","getUpdateLineNumber","sendWarning","RookError","RookSourceMissing","e","message","logger","exception","setError","setRemoved","setPending","replace","updateLineUsingCrc","testFileHash","lines","split","length","toString","crc32s","map","line","firstIndex","indexOf","lastIndex","lastIndexOf","updatedLine","RookLineMoved","blobHash","getGitBlobHash","RookCrcMismatchException","enc","Hex","RookHashMismatchException","spawnSync","stdout","trim","jsonName"],"mappings":"AAAA;;;;;;;AAEA;;AAEA;;AAMA;;AAEA;;;;AANA,MAAMA,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,kBAAD,CAAtB;;AAMe,MAAMG,gBAAN,CAAuB;AAElCC,EAAAA,WAAW,CAACC,aAAD,EAAgBC,OAAhB,EAAyB;AAChC,SAAKC,QAAL,GAAgBF,aAAa,CAACE,QAA9B;;AACA,QAAI,EAAE,OAAO,KAAKA,QAAZ,KAAyB,QAAzB,IAAqC,KAAKA,QAAL,YAAyBC,MAAhE,CAAJ,EAA6E;AACzE,YAAM,IAAIC,6BAAJ,CAAsB,WAAYJ,aAAlC,CAAN;AACH;;AAED,SAAKK,MAAL,GAAcL,aAAa,CAACK,MAA5B;;AACA,QAAI,CAACC,MAAM,CAACC,SAAP,CAAiB,KAAKF,MAAtB,CAAL,EAAoC;AAClC,YAAM,IAAID,6BAAJ,CAAsB,SAAUJ,aAAhC,CAAN;AACD;;AAED,SAAKQ,QAAL,GAAgBR,aAAa,CAACS,MAAd,IAAwB,IAAxC;AAEA,SAAKC,SAAL,GAAiBV,aAAa,CAACW,YAAd,IAA8B,IAA/C,CAbgC,CAchC;;AACA,SAAKC,UAAL,GAAkBZ,aAAa,CAACa,WAAd,IAA6B,KAA/C,CAfgC,CAiBhC;;AACA,SAAKC,gBAAL,GAAwBd,aAAa,CAACc,gBAAd,IAAkC,KAA1D;AACH;;AAEDC,EAAAA,MAAM,CAACC,eAAD,EAAkBC,GAAlB,EAAuB;AACzB,UAAMC,IAAI,GAAG,IAAb;AAEA,QAAIC,eAAe,GAAGH,eAAe,CAACI,UAAhB,CAA2B,iBAA3B,CAAtB;AAEA,UAAMC,UAAU,GAAGF,eAAe,CAACG,oBAAhB,CAAqCL,GAAG,CAACM,KAAzC,EAAgD,KAAKrB,QAArD,EAA+D,KAAKY,gBAApE,EAChBU,SAAD,IAAe;AACb,UAAM,SAASA,SAAS,CAACC,MAApB,IAAgCC,SAAS,KAAKF,SAAS,CAACC,MAA7D,EAAuE;AACnE,YAAI;AACA,cAAIE,aAAa,GAAG,IAApB;;AACA,cAAI,SAASH,SAAS,CAACI,YAAvB,EAAqC;AACjCD,YAAAA,aAAa,GAAG,KAAKE,mBAAL,CAAyBZ,GAAzB,EAA8B,KAAKf,QAAnC,EAA6CsB,SAAS,CAACI,YAAvD,CAAhB;AACH,WAFD,MAEO;AACHX,YAAAA,GAAG,CAACa,WAAJ,CAAgB,IAAIC,kBAAJ,CAAc,IAAIC,6BAAJ,CAAsB,KAAK9B,QAA3B,CAAd,CAAhB;AACAyB,YAAAA,aAAa,GAAG,KAAKtB,MAArB;AACH;;AAEDc,UAAAA,eAAe,CAACJ,MAAhB,CAAuB,IAAvB,EAA6BS,SAA7B,EAAwCG,aAAxC,EAAuD,IAAvD,EAA6DV,GAA7D;AACH,SAVD,CAUE,OAAOgB,CAAP,EAAU;AACR,gBAAMC,OAAO,GAAG,2BAAhB;;AACAC,yBAAOC,SAAP,CAAiBF,OAAjB,EAA0BD,CAA1B;;AACAhB,UAAAA,GAAG,CAACoB,QAAJ,CAAa,IAAIN,kBAAJ,CAAcE,CAAd,EAAiBC,OAAjB,CAAb;AACH;AACJ;AACJ,KAnBkB,EAmBhB,MAAM;AACLjB,MAAAA,GAAG,CAACqB,UAAJ;AACH,KArBkB,CAAnB;;AAuBA,QAAIjB,UAAJ,EAAgB;AACZJ,MAAAA,GAAG,CAACsB,UAAJ;AACH;AACJ;;AAEDV,EAAAA,mBAAmB,CAACZ,GAAD,EAAMf,QAAN,EAAgB0B,YAAhB,EAA8B;AAC7CA,IAAAA,YAAY,GAAGA,YAAY,CAACY,OAAb,CAAqB,iBAArB,EAAwC,IAAxC,CAAf;;AACA,QAAI,QAAQ,KAAK9B,SAAjB,EAA4B;AACxB,aAAO,KAAK+B,kBAAL,CAAwBxB,GAAxB,EAA6Bf,QAA7B,EAAuC0B,YAAvC,CAAP;AACH;;AAED,QAAI,QAAQ,KAAKpB,QAAjB,EAA2B;AACvB,WAAKkC,YAAL,CAAkBxC,QAAlB,EAA4B0B,YAA5B;AACA,aAAO,KAAKvB,MAAZ;AACH;;AAED,WAAO,KAAKA,MAAZ;AACH;;AAEDoC,EAAAA,kBAAkB,CAACxB,GAAD,EAAMf,QAAN,EAAgB0B,YAAhB,EAA8B;AAC5C,UAAMe,KAAK,GAAGf,YAAY,CAACgB,KAAb,CAAmB,IAAnB,CAAd,CAD4C,CAG5C;;AACA,QAAIlC,SAAJ;;AACA,QAAIiC,KAAK,CAACE,MAAN,IAAgB,KAAKxC,MAAzB,EAAiC;AAC7BK,MAAAA,SAAS,GAAG,kBAAMiC,KAAK,CAAC,KAAKtC,MAAL,GAAc,CAAf,CAAX,EAA8ByC,QAA9B,CAAuC,EAAvC,CAAZ;AACH;;AACD,QAAIpC,SAAS,KAAK,KAAKA,SAAvB,EAAkC;AAC9B,aAAO,KAAKL,MAAZ;AACH,KAV2C,CAY5C;;;AACA,QAAI,KAAKO,UAAL,KAAoB,IAAxB,EAA8B;AAC1B;AACA,YAAMmC,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI,kBAAMA,IAAN,EAAYH,QAAZ,CAAqB,EAArB,CAAlB,CAAf;AACA,YAAMI,UAAU,GAAGH,MAAM,CAACI,OAAP,CAAe,KAAKzC,SAApB,CAAnB;AACA,YAAM0C,SAAS,GAAGL,MAAM,CAACM,WAAP,CAAmB,KAAK3C,SAAxB,CAAlB;;AAEA,UAAKwC,UAAU,KAAK,CAAC,CAAjB,IAAwBA,UAAU,KAAKE,SAA3C,EAAuD;AACnD,cAAME,WAAW,GAAGJ,UAAU,GAAG,CAAjC;AACAjC,QAAAA,GAAG,CAACa,WAAJ,CAAgB,IAAIC,kBAAJ,CAAc,IAAIwB,yBAAJ,CAAkB,KAAKrD,QAAvB,EAAiC,KAAKG,MAAtC,EAA8CiD,WAA9C,CAAd,CAAhB;AACA,eAAOA,WAAP;AACH;AACJ,KAxB2C,CA0B5C;;;AACA,UAAME,QAAQ,GAAG,KAAKC,cAAL,CAAoBvD,QAApB,CAAjB;AACA,UAAM,IAAIwD,oCAAJ,CAA6BxD,QAA7B,EAAuC,KAAKQ,SAA5C,EAAuDA,SAAvD,EAAkE8C,QAAlE,CAAN;AACH;;AAEDd,EAAAA,YAAY,CAACxC,QAAD,EAAW0B,YAAX,EAAyB;AACjC,UAAMpB,QAAQ,GAAGX,MAAM,CAAC+B,YAAD,CAAN,CAAqBkB,QAArB,CAA8BlD,QAAQ,CAAC+D,GAAT,CAAaC,GAA3C,CAAjB;;AAEA,QAAIpD,QAAQ,KAAK,KAAKA,QAAtB,EAAgC;AAC5B,YAAMgD,QAAQ,GAAG,KAAKC,cAAL,CAAoBvD,QAApB,CAAjB;AACA,YAAM,IAAI2D,qCAAJ,CAA8B3D,QAA9B,EAAwC,KAAKM,QAA7C,EAAuDA,QAAvD,EAAiEgD,QAAjE,CAAN;AACH;AACJ;;AAEDC,EAAAA,cAAc,CAACvD,QAAD,EAAW;AACrB,QAAI;AACA,aAAOR,aAAa,CAACoE,SAAd,CAAwB,KAAxB,EAA+B,CAAC,aAAD,EAAgB5D,QAAhB,CAA/B,EAA0D6D,MAA1D,CAAiEjB,QAAjE,GAA4EkB,IAA5E,EAAP;AACH,KAFD,CAEE,OAAO/B,CAAP,EAAU;AACR,aAAO,IAAP;AACH;AACJ;;AApHiC;;;AAuHtCnC,gBAAgB,CAACmE,QAAjB,GAA4B,WAA5B","sourcesContent":["\"use strict\";\r\n\r\nimport RookError from \"../../processor/RookError\";\r\n\r\nimport crc32 from 'crc/lib/es6/crc32';\r\n\r\nconst child_process = require('child_process');\r\nconst CryptoJS = require('crypto-js');\r\nconst SHA256 = require('crypto-js/sha256');\r\n\r\nimport {logger} from '../../logger';\r\n\r\nimport { RookAugInvalidKey, RookHashMismatchException, RookCrcMismatchException, RookLineMoved, RookSourceMissing } from '../../exceptions'\r\n\r\nexport default class LocationFileLine {\r\n\r\n    constructor(configuration, factory) {\r\n        this.filename = configuration.filename;\r\n        if (!(typeof this.filename === 'string' || this.filename instanceof String)) {\r\n            throw new RookAugInvalidKey('filename'. configuration);\r\n        }\r\n\r\n        this.lineno = configuration.lineno;\r\n        if (!Number.isInteger(this.lineno)) {\r\n          throw new RookAugInvalidKey('lineno'. configuration);\r\n        }\r\n\r\n        this.fileHash = configuration.sha256 || null;\r\n\r\n        this.lineCrc32 = configuration.line_crc32_2 || null;\r\n        // If missing, we assume line is not unique\r\n        this.lineUnique = configuration.line_unique || false;\r\n\r\n        // The default value for NodeJS is false\r\n        this.includeExternals = configuration.includeExternals || false;\r\n    }\r\n\r\n    addAug(triggerServices, aug) {\r\n        const self = this;\r\n\r\n        let debuggerService = triggerServices.getService(\"DebuggerService\");\r\n\r\n        const registered = debuggerService.registerNotification(aug.augId, this.filename, this.includeExternals,\r\n          (matchInfo) => {\r\n            if ( (null !== matchInfo.script) && (undefined !== matchInfo.script) ) {\r\n                try {\r\n                    let updatedLineno = null;\r\n                    if (null !== matchInfo.fileContents) {\r\n                        updatedLineno = this.getUpdateLineNumber(aug, this.filename, matchInfo.fileContents);\r\n                    } else {\r\n                        aug.sendWarning(new RookError(new RookSourceMissing(this.filename)));\r\n                        updatedLineno = this.lineno;\r\n                    }\r\n\r\n                    debuggerService.addAug(null, matchInfo, updatedLineno, null, aug);\r\n                } catch (e) {\r\n                    const message = \"Exception when adding aug\";\r\n                    logger.exception(message, e);\r\n                    aug.setError(new RookError(e, message));\r\n                }\r\n            }\r\n        }, () => {\r\n            aug.setRemoved();\r\n        });\r\n\r\n        if (registered) {\r\n            aug.setPending();\r\n        }\r\n    }\r\n\r\n    getUpdateLineNumber(aug, filename, fileContents) {\r\n        fileContents = fileContents.replace(/(?:\\r\\n|\\r|\\n)/g, \"\\n\");\r\n        if (null != this.lineCrc32) {\r\n            return this.updateLineUsingCrc(aug, filename, fileContents);\r\n        }\r\n\r\n        if (null != this.fileHash) {\r\n            this.testFileHash(filename, fileContents)\r\n            return this.lineno;\r\n        }\r\n\r\n        return this.lineno;\r\n    }\r\n\r\n    updateLineUsingCrc(aug, filename, fileContents) {\r\n        const lines = fileContents.split(\"\\n\");\r\n\r\n        // If the line has not changed, we are good - return\r\n        let lineCrc32;\r\n        if (lines.length >= this.lineno) {\r\n            lineCrc32 = crc32(lines[this.lineno - 1]).toString(16);\r\n        }\r\n        if (lineCrc32 === this.lineCrc32) {\r\n            return this.lineno;\r\n        }\r\n\r\n        // If the line was unique in the original file, let's try to find it in this file\r\n        if (this.lineUnique === true) {\r\n            // If the line was unique in the original file and is still original here - send a warning and return\r\n            const crc32s = lines.map(line => crc32(line).toString(16));\r\n            const firstIndex = crc32s.indexOf(this.lineCrc32);\r\n            const lastIndex = crc32s.lastIndexOf(this.lineCrc32);\r\n\r\n            if ((firstIndex !== -1) && (firstIndex === lastIndex)) {\r\n                const updatedLine = firstIndex + 1;\r\n                aug.sendWarning(new RookError(new RookLineMoved(this.filename, this.lineno, updatedLine)));\r\n                return updatedLine;\r\n            }\r\n        }\r\n\r\n        // We failed to get a good match - throw an error\r\n        const blobHash = this.getGitBlobHash(filename);\r\n        throw new RookCrcMismatchException(filename, this.lineCrc32, lineCrc32, blobHash);\r\n    }\r\n\r\n    testFileHash(filename, fileContents) {\r\n        const fileHash = SHA256(fileContents).toString(CryptoJS.enc.Hex);\r\n\r\n        if (fileHash !== this.fileHash) {\r\n            const blobHash = this.getGitBlobHash(filename);\r\n            throw new RookHashMismatchException(filename, this.fileHash, fileHash, blobHash);\r\n        }\r\n    }\r\n\r\n    getGitBlobHash(filename) {\r\n        try {\r\n            return child_process.spawnSync(\"git\", [\"hash-object\", filename]).stdout.toString().trim();\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nLocationFileLine.jsonName = \"file_line\";\r\n"],"file":"LocationFileLine.js"}