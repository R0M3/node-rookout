{"version":3,"sources":["../../../src/augs/Aug.js"],"names":["Aug","constructor","augId","location","action","condition","output","maxAugTime","limits","status","enabled","_warningCache","Map","_logCache","undefined","length","rateLimiter","RateLimiter","addAug","triggerServices","e","message","logger","exception","setError","RookError","execute","frame","stack","startTime","Date","now","namespace","ContainerNamespace","JSUtilsNamespace","evaluate","rateLimitKey","allow","sendWarning","RookRuleRateLimited","info","UserWarnings","duration","record","RookRuleMaxExecutionTimeReached","rookError","shouldSilenceLog","setActive","sendRuleStatus","setPending","setRemoved","error","setUnknown","warn","logCache","has","size","set"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nimport RookError from \"../processor/RookError\";\r\nimport {RookRuleMaxExecutionTimeReached, RookRuleRateLimited} from \"../exceptions\";\r\n\r\nimport {logger} from \"../logger\";\r\nimport UserWarnings from \"../UserWarnings\";\r\n\r\nimport ContainerNamespace from \"../processor/namespaces/ContainerNamespace\"\r\nimport JSUtilsNamespace from \"../processor/namespaces/JSUtilsNamespace\"\r\nimport RateLimiter from \"./RateLimiter\";\r\n\r\nexport default class Aug {\r\n    constructor(augId, location, action, condition, output, maxAugTime, limits) {\r\n        this.augId = augId;\r\n        this.location = location;\r\n        this.action = action;\r\n        this.output = output;\r\n        this.status = null;\r\n        this.maxAugTime = maxAugTime;\r\n        this.enabled = true;\r\n        this.condition = condition;\r\n        this._warningCache = new Map();\r\n        this._logCache = new Map();\r\n\r\n        if (limits !== undefined && limits.length > 0) {\r\n            this.rateLimiter = new RateLimiter(limits[0], limits[1]);\r\n        } else {\r\n            this.rateLimiter = new RateLimiter();\r\n        }\r\n    }\r\n\r\n    addAug(triggerServices) {\r\n        try {\r\n            this.location.addAug(triggerServices, this);\r\n        } catch (e) {\r\n            const message = \"Exception when adding aug\";\r\n            logger.exception(message, e);\r\n            this.setError(new RookError(e, message));\r\n        }\r\n    }\r\n\r\n    execute(frame, stack) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            let startTime = Date.now();\r\n\r\n            let namespace = new ContainerNamespace({\r\n                'frame': frame,\r\n                'stack': stack,\r\n                'store': new ContainerNamespace({}),\r\n                'temp': new ContainerNamespace({}),\r\n                'utils': new JSUtilsNamespace({})\r\n            });\r\n\r\n            if ((this.condition === undefined) || this.condition.evaluate(namespace)) {\r\n                let rateLimitKey = this.rateLimiter.allow(startTime);\r\n\r\n                if (rateLimitKey === null) {\r\n                    this.sendWarning(new RookError(new RookRuleRateLimited()));\r\n                    return;\r\n                }\r\n\r\n                logger.info(\"Executing aug - %s\", this.augId);\r\n\r\n                this.action.execute(this.augId, namespace, this.output, new UserWarnings(this));\r\n\r\n                let duration = Date.now() - startTime;\r\n                this.rateLimiter.record(rateLimitKey, duration);\r\n\r\n                if (this.maxAugTime > 0 && duration > this.maxAugTime) {\r\n                    this.enabled = false;\r\n                    throw new RookRuleMaxExecutionTimeReached();\r\n                }\r\n            }\r\n        } catch (e) {\r\n            const message = \"Exception while processing Aug\";\r\n            let rookError = new RookError(e, message);\r\n\r\n            if (!this.shouldSilenceLog(rookError, this._logCache)) {\r\n                logger.exception(message, e);\r\n            }\r\n\r\n            this.setError(rookError);\r\n        }\r\n    }\r\n\r\n    setActive() {\r\n        this.sendRuleStatus(\"Active\");\r\n    }\r\n\r\n    setPending() {\r\n        this.sendRuleStatus(\"Pending\");\r\n    }\r\n\r\n    setRemoved() {\r\n        this.sendRuleStatus(\"Deleted\");\r\n    }\r\n\r\n    setError(error) {\r\n        this.sendRuleStatus(\"Error\", error);\r\n    }\r\n\r\n    setUnknown(error) {\r\n        this.sendRuleStatus(\"Unknown\", error);\r\n    }\r\n\r\n    sendWarning(error) {\r\n        if (this.shouldSilenceLog(error, this._warningCache)) {\r\n            return;\r\n        }\r\n\r\n        logger.warn(error.message);\r\n\r\n        this.output.sendWarning(this.augId, error);\r\n    }\r\n\r\n    sendRuleStatus(status, error=null) {\r\n        if (this.status === status) {\r\n            return;\r\n        }\r\n\r\n        logger.info(\"Updating rule status for %s to %s\", this.augId, status);\r\n\r\n        this.status = status;\r\n        this.output.sendRuleStatus(this.augId, status, error);\r\n    }\r\n\r\n    shouldSilenceLog(error, logCache) {\r\n        if (logCache.has(error.message) || logCache.size >= 10) {\r\n            return true;\r\n        }\r\n\r\n        logCache.set(error.message, true);\r\n\r\n        return false;\r\n    }\r\n}\r\n"],"file":"Aug.js"}