{"version":3,"sources":["../../../src/services/InspectorDebug.js"],"names":["inspector","require","url","InspectorDebug","constructor","userLine","scriptLoaded","getScript","self","getScriptCallback","positionsToBreakpoints","breakpointsToPositions","session","Session","connect","e","RookInspectorConnectFailed","on","script","params","isModule","scriptURL","startsWith","fileURLToPath","undefined","post","scriptId","err","scriptSource","logger","exception","error","message","pos","hitBreakpoints","InspectorFrameNamespace","callFrames","InspectorStackNamespace","active","setBreak","result","filename","pathToFileURL","lineNumber","lineno","columnNumber","column","response","RookInspectorSetBreakpointFailed","toKey","breakpointId","clearBreak","clearAllBreaks","positions","Object","keys","i","length","getProperties","object","ownProperties","objectId","value","RookInspectorFailedToGetObject","close","disconnect","scripts"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst inspector = require('inspector');\r\nconst url = require('url');\r\n\r\nimport {logger} from \"../logger\";\r\n\r\nimport {RookInspectorFailedToGetObject, RookInspectorSetBreakpointFailed, RookInspectorConnectFailed} from \"../exceptions\";\r\n\r\nimport {isBlackListedModule} from \"./IgnoredNodeModules\";\r\n\r\nimport InspectorFrameNamespace from \"../processor/namespaces/InspectorFrameNamespace\";\r\nimport InspectorStackNamespace from \"../processor/namespaces/InspectorStackNamespace\";\r\n\r\nexport class InspectorDebug {\r\n\r\n    constructor(userLine, scriptLoaded, getScript) {\r\n        const self = this;\r\n\r\n        this.getScriptCallback = getScript;\r\n\r\n        this.positionsToBreakpoints = {};\r\n        this.breakpointsToPositions = {};\r\n\r\n        this.session = new inspector.Session();\r\n\r\n        try {\r\n            this.session.connect();\r\n        } catch (e) {\r\n            throw new RookInspectorConnectFailed(e);\r\n        }\r\n\r\n        this.session.on('Debugger.scriptParsed', (script) => {\r\n            try {\r\n                if (false === script.params.isModule) {\r\n                    let scriptURL = script.params.url;\r\n\r\n                    // URLs instead of paths started in 10.12 which also introduced this\r\n                    // url.fileURLToPath. We assume we will not receive URLs before 10.12\r\n                    if (scriptURL.startsWith(\"file:\") && url.fileURLToPath !== undefined) {\r\n                        scriptURL = url.fileURLToPath(scriptURL);\r\n                    }\r\n\r\n                    if (isBlackListedModule(scriptURL)) {\r\n                        return;\r\n                    }\r\n\r\n                    self.session.post('Debugger.getScriptSource', {scriptId: script.params.scriptId}, (err, scriptSource) => {\r\n                        if (err) {\r\n                            logger.exception(\"Failed to get script source\", err);\r\n                            return;\r\n                        }\r\n\r\n                        try {\r\n                            scriptLoaded(script.params.scriptId, scriptURL, scriptSource.scriptSource);\r\n                        } catch (error) {\r\n                            logger.exception(\"Exception when processing script source callback\", error);\r\n                        }\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                logger.exception(\"Exception when processing script parse callback\", error);\r\n            }\r\n        });\r\n\r\n        this.session.on('Debugger.paused', (message) => {\r\n            try {\r\n                const pos = self.breakpointsToPositions[message.params.hitBreakpoints[0]];\r\n                userLine(pos,\r\n                    new InspectorFrameNamespace(self, message.params.callFrames[0]),\r\n                    new InspectorStackNamespace(self, message.params.callFrames));\r\n            } catch (error) {\r\n                logger.exception(error);\r\n            }\r\n\r\n            this.session.post(\"Debugger.resume\");\r\n        });\r\n\r\n        this.session.on('error', (error) => {\r\n            try {\r\n                logger.exception('InspectorDebugger error', error);\r\n            } catch (e) {\r\n\r\n            }\r\n        });\r\n\r\n        this.session.post('Debugger.enable');\r\n        this.session.post('Debugger.setBreakpointsActive', {active: true});\r\n    }\r\n\r\n    setBreak(pos) {\r\n        let result = {};\r\n\r\n        let scriptURL = pos.filename;\r\n\r\n        if (url.pathToFileURL !== undefined) {\r\n            scriptURL = url.pathToFileURL(scriptURL);\r\n        }\r\n\r\n        this.session.post(\r\n            'Debugger.setBreakpointByUrl', {\r\n                url: scriptURL,\r\n                lineNumber: pos.lineno - 1,\r\n                columnNumber: pos.column + 1\r\n            },\r\n            (error, response) => {\r\n                result.error = error;\r\n                result.response = response;\r\n        });\r\n\r\n        if (null != result.error) {\r\n            throw new RookInspectorSetBreakpointFailed(result.error);\r\n        }\r\n\r\n        this.positionsToBreakpoints[pos.toKey()] = result.response.breakpointId;\r\n        this.breakpointsToPositions[result.response.breakpointId] = pos;\r\n    }\r\n\r\n    clearBreak(pos) {\r\n        // If we have an object, hash it\r\n        if (pos.toKey) {\r\n            pos = pos.toKey();\r\n        }\r\n\r\n        const breakpointId = this.positionsToBreakpoints[pos];\r\n        if (undefined === breakpointId) {\r\n            return;\r\n        }\r\n\r\n        delete this.positionsToBreakpoints[pos];\r\n        delete this.breakpointsToPositions[breakpointId];\r\n\r\n        let result = {};\r\n        this.session.post(\r\n            'Debugger.removeBreakpoint', {breakpointId: breakpointId}, (error) => {\r\n                result.error = error;\r\n            }\r\n        );\r\n\r\n        if (null != result.error) {\r\n            logger.error(\"Failed to remove breakpoint\", result.error);\r\n        }\r\n    }\r\n\r\n    clearAllBreaks() {\r\n        let positions = Object.keys(this.positionsToBreakpoints);\r\n        for (let i = 0; i < positions.length; ++i) {\r\n            this.clearBreak(positions[i]);\r\n        }\r\n\r\n        this.positionsToBreakpoints = {};\r\n        this.breakpointsToPositions = {};\r\n    }\r\n\r\n    getProperties(object, ownProperties = true) {\r\n        let result = {};\r\n\r\n        this.session.post('Runtime.getProperties', {objectId: object.objectId,\r\n            ownProperties: ownProperties}, (error, value) => {\r\n            if (error) {\r\n                result.error = error;\r\n            } else {\r\n                result.value = value.result;\r\n            }\r\n        });\r\n\r\n        if (result.error) {\r\n            throw new RookInspectorFailedToGetObject(object);\r\n        }\r\n\r\n        return result.value;\r\n    }\r\n\r\n    getScript(scriptId) {\r\n        return this.getScriptCallback(scriptId);\r\n    }\r\n\r\n    close() {\r\n        this.clearAllBreaks();\r\n\r\n        this.session.post('Debugger.setBreakpointsActive', {active: false});\r\n        this.session.post('Debugger.disable');\r\n        this.session.disconnect();\r\n        this.session = null;\r\n    }\r\n\r\n    scripts() {\r\n        return [];\r\n    }\r\n\r\n}\r\n"],"file":"InspectorDebug.js"}