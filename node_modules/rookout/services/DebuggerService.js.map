{"version":3,"sources":["../../../src/services/DebuggerService.js"],"names":["assert","require","path","config","Pos","constructor","filename","lineno","column","toKey","ScriptNotifier","debug","pendingNotifications","scripts","setDebug","loadScripts","getMatchInfoByFilename","fileName","includeExternals","scriptId","Object","keys","script","matchInfo","getMatchInfo","getScriptObjectById","hasOwnProperty","registerNotification","augId","callback","removed","execute","addScript","source","notificationsToRemove","scriptWrapper","ScriptWrapper","notification","push","removeAug","undefined","clearAugs","augIds","AugHolder","breakpoints","positions","executeAugs","pos","frame","stack","augs","logger","error","aug","addAug","info","setBreak","setActive","currentAugs","augsToKeep","augsToDelete","length","clearBreak","setRemoved","clearAllBreaks","DebuggerService","augHolder","scriptNotifier","close","start","notEqual","inSourceMap","getGeneratedPosition","line","self","getDebugger","user_line","scriptLoaded","getScript","engine","selectEngine","InspectorDebug","v8debug","V8Debug","RookUnsupportedEngineSelection","verifyInspectFlagEnabledUnderElectron","processArguments","process","argv","toString","includes","RookElectronInspectFlagNotSet","InstrumentationConfig","ENGINE","versions","version","split","major","parseInt","substr","minor","RookUnsupportedNodeVersion"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst assert = require('assert');\r\nconst path = require('path');\r\n\r\nimport {canonizeFileName} from \"../utils\";\r\nimport ScriptWrapper from \"./ScriptWrapper\";\r\nimport {RookElectronInspectFlagNotSet} from \"../exceptions\";\r\n\r\nimport {logger} from \"../logger\";\r\nconst config = require('../config');\r\n\r\nimport {normalize} from \"./source-map-util\"\r\n\r\nimport {RookUnsupportedEngineSelection, RookUnsupportedNodeVersion} from \"../exceptions\";\r\n\r\n// Note: this is a bit of a heck that is used by V8Debug as well\r\nclass Pos {\r\n\r\n    constructor(filename, lineno, column) {\r\n        this.filename = filename;\r\n        this.lineno = lineno;\r\n        this.column = column;\r\n    }\r\n\r\n    toKey() {\r\n        return this.filename + \"@\" + this.lineno + \"@\" + this.column;\r\n    }\r\n}\r\n\r\nclass ScriptNotifier {\r\n\r\n    constructor() {\r\n        this.debug = null;\r\n\r\n        this.pendingNotifications = {};\r\n\r\n        this.scripts = {};\r\n    }\r\n\r\n    setDebug(debug) {\r\n        this.debug = debug;\r\n        this.loadScripts();\r\n    }\r\n\r\n    getMatchInfoByFilename(fileName, includeExternals = false) {\r\n        fileName = canonizeFileName(fileName);\r\n\r\n        for (let scriptId of Object.keys(this.scripts)) {\r\n            const script = this.scripts[scriptId];\r\n            const matchInfo = script.getMatchInfo(fileName, includeExternals);\r\n            if (null !== matchInfo) {\r\n                return matchInfo;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getScriptObjectById(scriptId) {\r\n        if (this.scripts.hasOwnProperty(scriptId)) {\r\n            return this.scripts[scriptId];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registerNotification(augId, fileName, includeExternals, callback, removed) {\r\n        fileName = canonizeFileName(fileName);\r\n\r\n        const matchInfo = this.getMatchInfoByFilename(fileName, includeExternals);\r\n        if (null !== matchInfo) {\r\n            callback(matchInfo);\r\n            return false;\r\n        }\r\n\r\n        this.pendingNotifications[augId] = {\r\n            augId : augId,\r\n            fileName: fileName,\r\n            includeExternals: includeExternals,\r\n            execute : callback,\r\n            removed : removed,\r\n        };\r\n\r\n        return true;\r\n    }\r\n\r\n    loadScripts() {\r\n        for (let script of this.debug.scripts()) {\r\n            this.addScript(script.scriptId, script.filename, script.source);\r\n        }\r\n    }\r\n\r\n    addScript(scriptId, filename, source) {\r\n        if (null == filename || this.scripts.hasOwnProperty(scriptId)) {\r\n            return;\r\n        }\r\n\r\n        let notificationsToRemove = [];\r\n\r\n        const scriptWrapper = new ScriptWrapper(scriptId, filename, source);\r\n\r\n        for (let augId of Object.keys(this.pendingNotifications)) {\r\n            let notification = this.pendingNotifications[augId];\r\n            const matchInfo = scriptWrapper.getMatchInfo(notification.fileName, notification.includeExternals);\r\n            if (null !== matchInfo) {\r\n                notification.execute(matchInfo);\r\n                notificationsToRemove.push(augId);\r\n            }\r\n        }\r\n\r\n        for (let augId of notificationsToRemove) {\r\n            delete this.pendingNotifications[augId];\r\n        }\r\n\r\n        this.scripts[scriptId] = scriptWrapper;\r\n    }\r\n\r\n    removeAug(augId) {\r\n        let notification = this.pendingNotifications[augId];\r\n        if (undefined !== notification) {\r\n            notification.removed();\r\n            delete this.pendingNotifications[augId];\r\n        }\r\n    }\r\n\r\n    clearAugs() {\r\n        let augIds = Object.keys(this.pendingNotifications);\r\n        for (let augId of augIds) {\r\n            this.removeAug(augId);\r\n        }\r\n\r\n        this.pendingNotifications = {};\r\n    }\r\n\r\n}\r\n\r\nclass AugHolder {\r\n\r\n    constructor(debug) {\r\n        this.debug = debug;\r\n\r\n        this.breakpoints = {};\r\n        this.positions = {};\r\n    }\r\n\r\n    executeAugs(pos, frame, stack) {\r\n        let augs = this.breakpoints[pos.toKey()];\r\n\r\n        if (null == augs) {\r\n            logger.error(\"Aug not found! %s@%d\", pos.filename, pos.lineno)\r\n        } else {\r\n            for (let aug of augs) {\r\n                aug.execute(frame, stack, {});\r\n            }\r\n        }\r\n    }\r\n\r\n    addAug(filename, lineno, column, aug) {\r\n        logger.info(\"Setting breakpoint at %s:%s:%s\", filename, lineno, column);\r\n\r\n        let pos = new Pos(canonizeFileName(filename), lineno, column);\r\n        if (this.breakpoints.hasOwnProperty(pos.toKey())) {\r\n            this.breakpoints[pos.toKey()].push(aug);\r\n        } else {\r\n            this.debug.setBreak(pos);\r\n\r\n            this.breakpoints[pos.toKey()]= [aug];\r\n        }\r\n\r\n        this.positions[aug.augId] = pos;\r\n        aug.setActive();\r\n    }\r\n\r\n    removeAug(augId) {\r\n        if (!this.positions.hasOwnProperty(augId)) {\r\n            return;\r\n        }\r\n\r\n        // Get current augs in position\r\n        let pos = this.positions[augId];\r\n\r\n        let currentAugs = this.breakpoints[pos.toKey()];\r\n\r\n        // Divide augs into delete and keep\r\n        let augsToKeep = [];\r\n        let augsToDelete = [];\r\n        for (let aug of currentAugs) {\r\n            if (aug.augId === augId) {\r\n                augsToDelete.push(aug);\r\n            } else {\r\n                augsToKeep.push(aug);\r\n            }\r\n        }\r\n\r\n        // Update list\r\n        if (augsToKeep.length > 0) {\r\n            this.breakpoints[pos.toKey()] = augsToKeep\r\n        } else {\r\n            this.debug.clearBreak(pos);\r\n            delete this.breakpoints[pos.toKey()];\r\n        }\r\n\r\n        // Update status\r\n        for (let aug of augsToDelete) {\r\n            aug.setRemoved();\r\n        }\r\n\r\n        // Remove from position list\r\n        delete this.positions[augId];\r\n    }\r\n\r\n    clearAugs() {\r\n        let augIds = Object.keys(this.positions);\r\n        for (let augId of augIds) {\r\n            this.removeAug(augId);\r\n        }\r\n\r\n        this.breakpoints = {};\r\n        this.positions = {};\r\n        this.debug.clearAllBreaks();\r\n    }\r\n}\r\n\r\nexport class DebuggerService {\r\n\r\n    constructor() {\r\n        this.debug = null;\r\n        this.augHolder = null;\r\n        this.scriptNotifier = null;\r\n    }\r\n\r\n    close() {\r\n        this.clearAugs();\r\n\r\n        if (null !== this.debug) {\r\n            this.debug.close();\r\n            this.debug = null;\r\n        }\r\n    }\r\n\r\n    addAug(filename, matchInfo, lineno, column, aug) {\r\n        this.start();\r\n\r\n        // Note- this is a hack used to simplify testing, script should never be null in production\r\n        if (null === matchInfo) {\r\n            matchInfo = this.scriptNotifier.getMatchInfoByFilename(filename);\r\n            assert.notEqual(matchInfo, null, \"Script not found\");\r\n        }\r\n\r\n        if (matchInfo.inSourceMap) {\r\n            // Normalizing the filename using the source-map normalize function to avoid filename mismatch\r\n            const pos = matchInfo.script.getGeneratedPosition(normalize(matchInfo.filename), lineno, column);\r\n            lineno = pos.line;\r\n            column = pos.column;\r\n        }\r\n\r\n        this.augHolder.addAug(matchInfo.script.filename, lineno, column, aug);\r\n    }\r\n\r\n    registerNotification(augId, fileName, includeExternals, callback, removed) {\r\n        this.start();\r\n\r\n        return this.scriptNotifier.registerNotification(augId, fileName, includeExternals, callback, removed);\r\n    }\r\n\r\n    removeAug(augId) {\r\n        if (null !== this.augHolder) {\r\n            this.augHolder.removeAug(augId);\r\n        }\r\n\r\n        if (null !== this.scriptNotifier) {\r\n            this.scriptNotifier.removeAug(augId);\r\n        }\r\n    }\r\n\r\n    clearAugs() {\r\n        if (null !== this.augHolder) {\r\n            this.augHolder.clearAugs();\r\n        }\r\n\r\n        if (null !== this.scriptNotifier) {\r\n            this.scriptNotifier.clearAugs();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (null === this.debug) {\r\n            const self = this;\r\n\r\n            this.scriptNotifier = new ScriptNotifier();\r\n            this.debug = this.getDebugger();\r\n\r\n            this.augHolder = new AugHolder(this.debug);\r\n            this.scriptNotifier.setDebug(this.debug);\r\n        }\r\n    }\r\n\r\n    getDebugger() {\r\n        const self = this;\r\n\r\n        function user_line(pos, frame, stack) {\r\n            self.augHolder.executeAugs(pos, frame, stack);\r\n        }\r\n        \r\n        function scriptLoaded(scriptId, filename, source) {\r\n            self.scriptNotifier.addScript(scriptId, filename, source);\r\n        }\r\n\r\n        function getScript(scriptId) {\r\n            return self.scriptNotifier.getScriptObjectById(scriptId);\r\n        }\r\n\r\n        const engine = DebuggerService.selectEngine();\r\n        switch (engine) {\r\n            case \"inspector\":\r\n                const InspectorDebug = require('./InspectorDebug');\r\n                return new InspectorDebug.InspectorDebug(user_line, scriptLoaded, getScript);\r\n\r\n            case \"v8\":\r\n                const v8debug = require('./V8Debug');\r\n                return new v8debug.V8Debug(user_line, scriptLoaded, getScript);\r\n\r\n            default:\r\n                throw new RookUnsupportedEngineSelection(engine);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //NOTE:: if inspect is not specified under electron, inspector api will fail to load\r\n    //NOTE:: its important that this function will happen here and not in the InspectorDebug\r\n    //          since we actually want to fail if inspect is not specified\r\n    static verifyInspectFlagEnabledUnderElectron() {\r\n        let processArguments = process.argv.toString();\r\n        if (processArguments.includes('electron') &&\r\n            !processArguments.includes('--inspect')) {\r\n            throw new RookElectronInspectFlagNotSet();\r\n        }\r\n    }\r\n\r\n    static selectEngine() {\r\n        this.verifyInspectFlagEnabledUnderElectron();\r\n\r\n        let engine = config.InstrumentationConfig.ENGINE;\r\n        if (!(engine) || engine === \"auto\") {\r\n            const versions = process.version.split('.');\r\n            const major = parseInt(versions[0].substr(1));\r\n            const minor = parseInt(versions[1]);\r\n            if (major < 4) {\r\n                throw new RookUnsupportedNodeVersion(process.version);\r\n            } else if (major >= 8) {\r\n                return \"inspector\";\r\n            } else {\r\n                return \"v8\";\r\n            }\r\n        } else {\r\n            return engine;\r\n        }\r\n    }\r\n}\r\n"],"file":"DebuggerService.js"}