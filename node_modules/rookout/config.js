"use strict";

var _utils = require("./utils");

const path = require('path');

const fs = require('fs');

class Config {
  constructor() {
    this.loadDefaults();
  }

  loadDefaults() {
    this.LoggingConfiguration = {
      LOGGER_NAME: "rook",
      FILE_NAME: "rookout/node-rook.log",
      LOG_TO_STDERR: false,
      LOG_LEVEL: "INFO",
      PROPAGATE_LOGS: false,
      DEBUG: false
    };
    this.VersionConfiguration = {
      VERSION: "0.1.80",
      COMMIT: "290a09ae08ef52df5807af36aec4e3c406e348cd"
    };
    this.DefaultConfiguration = {
      DEFAULT_CONFIG_FILE_NAME: "rookout-config.json",
      LOAD_FROM_APP_FOLDER: true,
      USER_CONFIGURATION_FILE: "rookout/rook-config.json"
    };
    this.ErrorConfiguration = {
      STACK_DEPTH: 10
    };
    this.ControllerAddress = {
      HOST: "wss://control.rookout.com",
      PORT: 443
    };
    this.AgentComConfiguration = {
      BACK_OFF: 0.3,
      MAX_SLEEP: 60,
      MAX_MESSAGE_LENGTH: 100 * 1024 * 1024,
      TIMEOUT: 2,
      REQUEST_TIMEOUT_SECS: 30,
      CONNECT_TIMEOUT: 2,
      PING_TIMEOUT: 30,
      PING_INTERVAL: 10,
      RESET_BACKOFF_TIMEOUT: 3 * 60,
      MAX_QUEUED_MESSAGES: 500
    };
    this.OutputConfiguration = {
      FLUSH_TIME_INTERVAL: 0.25,
      MAX_ITEMS: 40,
      MAX_LOG_ITEMS: 100,
      MAX_STATUS_UPDATES: 100
    };
    this.OutputWsConfiguration = {
      BUCKET_REFRESH_RATE: 10,
      MAX_AUG_MESSAGES: 100,
      MAX_LOG_ITEMS: 200,
      MAX_STATUS_UPDATES: 200
    };
    this.InstrumentationConfig = {
      ENGINE: "auto",
      MIN_TIME_BETWEEN_HITS_MS: 100,
      MAX_AUG_TIME: 400
    };
    this.GitConfiguration = {
      GIT_COMMIT: null,
      GIT_ORIGIN: null
    };
  }

}

let config = new Config();
config.JSConfig = {
  SOURCE_MAP_SUPPORT: true
};
module.exports = config;
//# sourceMappingURL=config.js.map