{"version":3,"sources":["../../../../src/processor/namespaces/InspectorFrameNamespace.js"],"names":["path","require","InspectorFrameNamespace","Namespace","constructor","inspector","frame","rawPosition","position","readAttribute","name","undefined","this","InspectorObjectNamespace","getObject","RookAttributeNotFound","scope","scopeChain","scopeObject","getProperties","object","potentialValue","value","callMethod","args","filename","line","function","locals","dump","JSObjectNamespace","getPosition","module","result","depth","dumpConfig","parseInt","isNaN","dumpConfigs","toLowerCase","RookInvalidMethodArguments","className","scopeIndex","length","nextScope","type","maxDepth","ContainerNamespace","script","getScript","location","scriptId","rawFilename","url","basename","lineNumber","column","columnNumber","functionName","mapConsumer","originalPosition","getOriginalPosition","source","String"],"mappings":"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","sourcesContent":["\r\nimport Namespace from \"./Namespace\";\r\nimport JSObjectNamespace, { dumpConfigs } from './JSObjectNamespace'\r\nimport { RookAttributeNotFound, RookInvalidMethodArguments } from '../../exceptions'\r\nimport ContainerNamespace from \"./ContainerNamespace\";\r\nimport InspectorObjectNamespace from \"./InspectorObjectNamespace\";\r\nconst path = require(\"path\");\r\n\r\nexport default class InspectorFrameNamespace extends Namespace {\r\n\r\n    constructor(inspector, frame) {\r\n        super();\r\n\r\n        this.inspector = inspector;\r\n        this.frame = frame;\r\n\r\n        this.rawPosition = null;\r\n        this.position = null;\r\n    }\r\n\r\n    readAttribute(name) {\r\n        if ('this' === name) {\r\n            if (undefined !== this.frame.this) {\r\n                return InspectorObjectNamespace.getObject(this.inspector, this.frame.this);\r\n            } else {\r\n                throw new RookAttributeNotFound(name);\r\n            }\r\n        } else {\r\n            for (let scope of this.frame.scopeChain) {\r\n                const scopeObject = this.inspector.getProperties(scope.object, false);\r\n\r\n                for (let potentialValue of scopeObject) {\r\n                    if (potentialValue.name === name) {\r\n                        return InspectorObjectNamespace.getObject(this.inspector, potentialValue.value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        throw new RookAttributeNotFound(name);\r\n    }\r\n\r\n    callMethod(name, args) {\r\n        switch (name) {\r\n            case \"filename\":\r\n            case \"module\":\r\n                return this.filename();\r\n            case \"line\":\r\n                return this.line();\r\n            case \"function\":\r\n            case \"method\":\r\n                return this.function();\r\n            case \"locals\":\r\n                return this.locals(args);\r\n            case \"dump\":\r\n                return this.dump(args);\r\n            default:\r\n                return super.callMethod(name, args);\r\n        }\r\n    }\r\n\r\n    filename() {\r\n        return new JSObjectNamespace(this.getPosition().filename);\r\n    }\r\n\r\n    module() {\r\n        return this.filename();\r\n    }\r\n\r\n    line() {\r\n        return new JSObjectNamespace(this.getPosition().line);\r\n    }\r\n\r\n    function() {\r\n        return new JSObjectNamespace(this.getPosition().function);\r\n    }\r\n\r\n    locals(args) {\r\n        let result = {};\r\n\r\n        let depth = null, dumpConfig = null;\r\n        if (null != args && '' !== args) {\r\n            depth = parseInt(args);\r\n            if (isNaN(depth)) {\r\n                depth = null;\r\n                dumpConfig = dumpConfigs[args.toLowerCase()];\r\n                if (dumpConfig === undefined) {\r\n                    throw new RookInvalidMethodArguments('locals()', args);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.frame.this !== undefined && this.frame.this.className !== 'global') {\r\n            result['this'] = InspectorObjectNamespace.getObject(this.inspector, this.frame.this);\r\n        }\r\n\r\n        // We iterate from the top down to get all scopes in the correct order, skipping the top scope (Global/Injected)\r\n        for (var scopeIndex = 0; scopeIndex < this.frame.scopeChain.length; scopeIndex++) {\r\n            let scope = this.frame.scopeChain[scopeIndex];\r\n            let nextScope = this.frame.scopeChain[scopeIndex + 1];\r\n\r\n            if ((scope.type === 'local' || scope.type === 'catch' || scope.type == 'block') ||\r\n                (scope.type === 'closure' && (undefined == nextScope || nextScope.type !== 'global'))) {\r\n                const scopeObject = this.inspector.getProperties(scope.object, false);\r\n\r\n                for (let value of scopeObject) {\r\n                    result[value.name] = InspectorObjectNamespace.getObject(this.inspector, value.value);\r\n\r\n                    if (null != depth) {\r\n                        result[value.name].dumpConfig.maxDepth = depth\r\n                    } else {\r\n                        if (null != dumpConfig) {\r\n                            result[value.name].dumpConfig = dumpConfig;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return new ContainerNamespace(result);\r\n    }\r\n\r\n    dump(args) {\r\n        return new ContainerNamespace({\r\n            locals: this.locals(args),\r\n            module: this.module(),\r\n            filename: this.filename(),\r\n            line: this.line(),\r\n            function: this.function(),\r\n        })\r\n    }\r\n\r\n    getPosition() {\r\n        if (null !== this.position) {\r\n            return this.position;\r\n        }\r\n        const script = this.inspector.getScript(this.frame.location.scriptId);\r\n\r\n        let rawFilename = null;\r\n        if (null !== script) {\r\n            rawFilename = script.filename;\r\n        } else {\r\n            if (this.frame.url !== undefined) {\r\n                rawFilename = path.basename(this.frame.url);\r\n            }\r\n        }\r\n\r\n        this.rawPosition = {\r\n            filename: rawFilename,\r\n            line: this.frame.location.lineNumber + 1,\r\n            column: this.frame.location.columnNumber,\r\n            function: this.frame.functionName\r\n        };\r\n\r\n        if (null !== script && null !== script.mapConsumer) {\r\n            let originalPosition = script.getOriginalPosition(this.rawPosition.line, this.rawPosition.column);\r\n            if (null != originalPosition) {\r\n                // In case of bad mapping we skip the resolve.\r\n                if (originalPosition.line === null) {\r\n                    originalPosition = this.rawPosition;\r\n                }\r\n\r\n                this.position = {\r\n                    filename: originalPosition.source,\r\n                    line: originalPosition.line,\r\n                    column: originalPosition.column,\r\n                    function: this.rawPosition.function\r\n                };\r\n\r\n                if (this.position.function === '' &&\r\n                    (typeof originalPosition.name === 'string' || originalPosition.name instanceof String)) {\r\n                    this.position.function = originalPosition.name;\r\n                }\r\n            }\r\n        }\r\n\r\n        // If we have been unable to get original position, just use raw position\r\n        if (null == this.position) {\r\n            this.position = this.rawPosition;\r\n        }\r\n\r\n        if (this.position.function === '') {\r\n            this.position.function = 'anonymous';\r\n        }\r\n\r\n        return this.position;\r\n    }\r\n\r\n}\r\n"],"file":"InspectorFrameNamespace.js"}